{"version":3,"sources":["redux/hooks.ts","redux/beersSlice.ts","redux/fetchSlice.ts","fetch/useFetchBeers.tsx","components/BeersList/styles.ts","components/Pagination/styles.ts","components/Pagination/index.tsx","components/BeersList/BeerElement/styles.ts","components/BeersList/BeerElement/index.tsx","components/BeerSearch/styles.ts","components/BeerSearch/index.tsx","components/Button/styles.ts","components/Button/index.tsx","components/BeersList/index.tsx","fetch/useFetchBeerDetails.tsx","components/BeerDetails/styles.ts","components/BeerDetails/index.tsx","router/index.tsx","redux/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","beersSlice","createSlice","name","initialState","list","reducers","updateBeersList","state","action","payload","eraseBeersList","actions","selectBeers","beers","selectBeersByPage","id","createSelector","fetchSlice","search","page","slide","incrementPage","decrementPage","resetPage","updateSearch","increaseSlide","decreaseSlide","resetSlide","getPage","fetch","getSearch","getSlide","useFetchBeers","useState","isLoaded","setIsLoaded","error","setError","dispatch","isPageFetched","isFetched","didMount","useRef","useEffect","current","timer","setTimeout","clearTimeout","then","res","ok","Error","json","result","beersNames","map","r","description","image_url","catch","err","message","Wrapper","styled","div","BeersList","Header","Message","border","shared","css","Page","props","active","Arrow","disabled","PaginationWrapper","RIGHT","String","fromCharCode","LEFT","Pagination","currentPage","currentSlide","pages","Array","from","length","_","i","isIncrementAllowed","onClick","ImgWrapper","Shorthand","Name","ARROW","BeerElement","goToBeer","useHistory","push","src","height","substr","Input","input","SearchInput","type","placeholder","onChange","e","preventDefault","target","value","autoFocus","BeerButton","button","Button","label","destination","goTo","BeerList","beersList","randomId","Math","floor","random","getRandomBeerAdress","beer","useFetchBeerDetails","setBeer","first_brewed","abv","ibu","Info","Description","Feature","Key","Value","ButtonWrapper","BeerDetails","useParams","Number","Beer","Object","keys","slice","key","Features","AppRouter","path","component","exact","store","configureStore","reducer","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53dfd3fa.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\"\r\nimport { RootState, AppDispatch } from \"./store\"\r\n\r\ntype AppDispatchProps = typeof useDispatch\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch: AppDispatchProps = () => useDispatch<AppDispatch>()\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable camelcase */\r\nimport { createSlice, PayloadAction, createSelector } from \"@reduxjs/toolkit\"\r\nimport { RootState } from \"./store\"\r\nexport interface BookProps {\r\n    id: string;\r\n    name: string;\r\n    description: string;\r\n    image_url: string;\r\n}\r\ninterface BeersState {\r\n    list: BookProps[][]\r\n}\r\n\r\nconst initialState: BeersState = {\r\n    list: []\r\n}\r\n\r\nexport const beersSlice = createSlice({\r\n    name: \"beers\",\r\n    initialState,\r\n    reducers: {\r\n        updateBeersList: (state, action: PayloadAction<BookProps[]>) => ({\r\n            list: [...state.list, action.payload]\r\n        }),\r\n        eraseBeersList: () => ({\r\n            list: []\r\n        })\r\n    }\r\n})\r\n\r\nexport const { updateBeersList, eraseBeersList } = beersSlice.actions\r\n\r\nexport const selectBeers = (state: RootState): BookProps[][] => state.beers.list\r\n\r\nexport const selectBeersByPage = (id: number) => {\r\n    return createSelector(\r\n        selectBeers,\r\n        list => list[id] ?? []\r\n    )\r\n}\r\n\r\nexport const isFetched = (page: number) => {\r\n    return createSelector(\r\n        selectBeers,\r\n        list => !!list[page - 1]\r\n    )\r\n}\r\n\r\nexport default beersSlice.reducer\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\n/* eslint-disable camelcase */\r\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\r\nimport { RootState } from \"./store\"\r\ninterface FetchState {\r\n    search: string | null,\r\n    page: number,\r\n    slide: number\r\n}\r\n\r\nconst initialState: FetchState = {\r\n    search: null,\r\n    page: 1,\r\n    slide: 0\r\n}\r\n\r\nexport const fetchSlice = createSlice({\r\n    name: \"fetch\",\r\n    initialState,\r\n    reducers: {\r\n        incrementPage: state => {\r\n            state.page += 1\r\n        },\r\n        decrementPage: state => {\r\n            state.page -= 1\r\n        },\r\n        resetPage: state => {\r\n            state.page = 1\r\n        },\r\n        updateSearch: (state, action: PayloadAction<string>) => ({\r\n            ...state,\r\n            search: action.payload\r\n        }),\r\n        increaseSlide: state => {\r\n            state.slide += 10\r\n        },\r\n        decreaseSlide: state => {\r\n            state.slide -= 10\r\n        },\r\n        resetSlide: state => {\r\n            state.slide = 0\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    incrementPage,\r\n    decrementPage,\r\n    resetPage,\r\n    updateSearch,\r\n    increaseSlide,\r\n    decreaseSlide,\r\n    resetSlide\r\n} = fetchSlice.actions\r\n\r\nexport const getPage = (state: RootState): FetchState[\"page\"] => state.fetch.page\r\n\r\nexport const getSearch = (state: RootState): FetchState[\"search\"] => state.fetch.search\r\n\r\nexport const getSlide = (state: RootState): FetchState[\"slide\"] => state.fetch.slide\r\n\r\nexport default fetchSlice.reducer\r\n","/* eslint-disable camelcase */\r\nimport { useEffect, useState, useRef } from \"react\"\r\nimport { useAppDispatch, useAppSelector } from \"../redux/hooks\"\r\nimport { updateBeersList, BookProps, isFetched, eraseBeersList } from \"../redux/beersSlice\"\r\nimport { getPage, resetPage, getSearch } from \"../redux/fetchSlice\"\r\ninterface UseFetchBeersProps {\r\n    isLoaded: boolean;\r\n    error: string | null;\r\n}\r\n\r\nconst useFetchBeers = (): UseFetchBeersProps => {\r\n    const [isLoaded, setIsLoaded] = useState(true)\r\n    const [error, setError] = useState<string | null>(null)\r\n    const dispatch = useAppDispatch()\r\n    const page = useAppSelector(getPage)\r\n    const search = useAppSelector(getSearch)\r\n    const isPageFetched = useAppSelector(isFetched(page))\r\n    const didMount = useRef(false)\r\n\r\n    useEffect(() => {\r\n        if (didMount.current && typeof search === \"string\") {\r\n            const timer = setTimeout(() => {\r\n                dispatch(resetPage())\r\n                dispatch(eraseBeersList())\r\n            }, 1000)\r\n            return () => clearTimeout(timer)\r\n        } else {\r\n            didMount.current = true\r\n        }\r\n    }, [search, dispatch])\r\n\r\n    useEffect(() => {\r\n        if (!isPageFetched) {\r\n            setIsLoaded(false)\r\n            fetch(`https://api.punkapi.com/v2/beers?${search ? `beer_name=${search}&` : \"\"}page=${page}&per_page=3`)\r\n                .then(res => {\r\n                    if (!res.ok) {\r\n                        throw Error(\"There was a problem to fetch data\")\r\n                    }\r\n                    return res.json()\r\n                })\r\n                .then(\r\n                    (result: BookProps[]) => {\r\n                        setIsLoaded(true)\r\n                        const beersNames: BookProps[] = result.map((r: BookProps) => (\r\n                            {\r\n                                id: r.id,\r\n                                name: r.name,\r\n                                description: r.description,\r\n                                image_url: r.image_url\r\n                            }\r\n                        ))\r\n                        dispatch(updateBeersList(beersNames))\r\n                    }\r\n                ).catch(err => setError(err.message))\r\n        }\r\n    }, [search, dispatch, page, isPageFetched])\r\n\r\n    return {\r\n        isLoaded,\r\n        error\r\n    }\r\n}\r\n\r\nexport default useFetchBeers\r\n","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 80%;\r\n    margin: auto;\r\n    margin-top: 30px;\r\n`\r\n\r\nexport const BeersList = styled.div`\r\n    margin-top: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Header = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n`\r\n\r\nexport const Message = styled.div`\r\n    height: 696px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 50px;\r\n`\r\n","import styled, { css } from \"styled-components\"\r\n\r\nconst border = \"solid 1px\"\r\n\r\nconst shared = () => css`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Page = styled.div<{ active?: boolean }>`\r\n    ${shared}\r\n    height: 100%;\r\n    width: 55px;\r\n    background-color: ${props => props.active ? \"#05aff1\" : \"white\"};\r\n    transition: background-color 0.3s;\r\n    border-top: ${border};\r\n    border-bottom: ${border};\r\n    :nth-last-of-type(n+3){\r\n        border-right: ${border};\r\n    }\r\n    font-size: 30px;\r\n`\r\nexport const Arrow = styled.div<{ disabled?: boolean }>`\r\n    ${shared}\r\n    height: 100%;\r\n    width: 55px;\r\n    font-size: 25px;\r\n    border: ${border};\r\n    :nth-of-type(1){\r\n        border-radius: 10px 0 0 10px;\r\n    }\r\n    :nth-last-of-type(1){\r\n        border-radius: 0 10px 10px 0;\r\n    }\r\n    cursor: ${props => props.disabled ? \"no-drop\" : \"pointer\"};\r\n`\r\n\r\nexport const PaginationWrapper = styled.div`\r\n    ${shared}\r\n    text-align: center;\r\n    height: 50px;\r\n    bottom: 30px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n","import { FC, useEffect, useRef } from \"react\"\r\nimport { PaginationWrapper, Page, Arrow } from \"./styles\"\r\nimport { selectBeersByPage } from \"../../redux/beersSlice\"\r\nimport {\r\n    incrementPage,\r\n    decrementPage,\r\n    getPage,\r\n    getSlide,\r\n    increaseSlide,\r\n    decreaseSlide,\r\n    resetSlide\r\n} from \"../../redux/fetchSlice\"\r\nimport { useAppSelector, useAppDispatch } from \"../../redux/hooks\"\r\n\r\nconst RIGHT = String.fromCharCode(8680)\r\nconst LEFT = String.fromCharCode(8678)\r\n\r\nconst Pagination: FC = () => {\r\n    const currentPage = useAppSelector(getPage)\r\n    const currentSlide = useAppSelector(getSlide)\r\n    const dispatch = useAppDispatch()\r\n    const didMount = useRef(false)\r\n    const pages = Array.from({ length: 10 }, (_, i) => i + 1 + currentSlide)\r\n    const isIncrementAllowed = useAppSelector(selectBeersByPage(currentPage - 1)).length === 3\r\n\r\n    const nextSlide = () => {\r\n        if (currentPage % 10 === 0) {\r\n            dispatch(increaseSlide())\r\n        }\r\n    }\r\n\r\n    const previousSlide = () => {\r\n        if (currentPage % 10 === 1) {\r\n            dispatch(decreaseSlide())\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (didMount.current && currentPage === 1) {\r\n            dispatch(resetSlide())\r\n        } else {\r\n            didMount.current = true\r\n        }\r\n    })\r\n\r\n    const goPreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            dispatch(decrementPage())\r\n            previousSlide()\r\n        }\r\n    }\r\n\r\n    const goNextPage = () => {\r\n        if (isIncrementAllowed) {\r\n            dispatch(incrementPage())\r\n            nextSlide()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PaginationWrapper>\r\n            <Arrow\r\n                onClick={goPreviousPage}\r\n                disabled={currentPage === 1}\r\n            >\r\n                {LEFT}\r\n            </Arrow>\r\n            {pages.map(page => (\r\n                <Page\r\n                    key={page}\r\n                    active={page === currentPage}\r\n                >\r\n                    {page}\r\n                </Page>\r\n            ))}\r\n            <Arrow\r\n                onClick={goNextPage}\r\n                disabled={!isIncrementAllowed}\r\n            >\r\n                {RIGHT}\r\n            </Arrow>\r\n        </PaginationWrapper>\r\n    )\r\n}\r\n\r\nexport default Pagination\r\n","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n    height: 200px;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    border: solid 1px;\r\n    border-radius: 30px;\r\n    margin-bottom: 30px;\r\n`\r\n\r\nexport const ImgWrapper = styled.div`\r\n    width: 20%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Shorthand = styled.div`\r\n    width: 60%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    font-size: 20px;\r\n`\r\n\r\nexport const Name = styled.div`\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n`\r\n\r\nexport const Arrow = styled.div`\r\n    width: 20%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 50px;\r\n    cursor: pointer;\r\n`\r\n","/* eslint-disable camelcase */\r\nimport { FC } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Wrapper, ImgWrapper, Shorthand, Name, Arrow } from \"./styles\"\r\n\r\nconst ARROW = String.fromCharCode(10148)\r\n\r\ninterface BeerElementProps {\r\n    id: string\r\n    image_url: string;\r\n    name: string;\r\n    description: string;\r\n}\r\n\r\nconst BeerElement: FC<BeerElementProps> = ({\r\n    id, image_url, name, description\r\n}: BeerElementProps) => {\r\n    const goToBeer = useHistory().push\r\n    return (\r\n        <Wrapper>\r\n            <ImgWrapper>\r\n                <img src={image_url} height={\"150px\"} />\r\n            </ImgWrapper>\r\n            <Shorthand>\r\n                <Name>{name}</Name>\r\n                <div>{`${description.substr(0, 100)}...`}</div>\r\n            </Shorthand>\r\n            <Arrow\r\n                onClick={() => goToBeer(`/${id}`)}\r\n            >\r\n                {ARROW}\r\n            </Arrow>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default BeerElement\r\n","import styled from \"styled-components\"\r\n\r\nexport const Input = styled.input`\r\n    font-size: 30px;\r\n    border: solid 1px;\r\n    border-radius: 16px;\r\n    &:focus {\r\n        outline: none;\r\n        box-shadow: 0px 0px 4px #05aff1;\r\n    }\r\n    padding: 12px 20px;\r\n`\r\n","import { FC } from \"react\"\r\nimport { useAppSelector, useAppDispatch } from \"../../redux/hooks\"\r\nimport { getSearch, updateSearch } from \"../../redux/fetchSlice\"\r\nimport { Input } from \"./styles\"\r\n\r\nconst SearchInput: FC = () => {\r\n    const search = useAppSelector(getSearch)\r\n    const dispatch = useAppDispatch()\r\n\r\n    const setSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault()\r\n        dispatch(updateSearch(e.target.value))\r\n    }\r\n\r\n    return (\r\n        <Input\r\n            type=\"text\"\r\n            placeholder=\"Gimme the BEER!\"\r\n            onChange={setSearch}\r\n            value={search ?? \"\"}\r\n            autoFocus\r\n        />\r\n    )\r\n}\r\n\r\nexport default SearchInput\r\n","import styled from \"styled-components\"\r\n\r\nexport const BeerButton = styled.button`\r\n    height: 60px;\r\n    width: 200px;\r\n    border-radius: 16px;\r\n    border: solid 1px;\r\n    font-size: 30px;\r\n    background: #05aff1;\r\n    outline: none;\r\n`\r\n","import { FC } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { BeerButton } from \"./styles\"\r\n\r\ninterface ButtonProps {\r\n    label: string;\r\n    destination: string;\r\n}\r\n\r\nconst Button: FC<ButtonProps> = ({ label, destination }: ButtonProps) => {\r\n    const goTo = useHistory().push\r\n    return (\r\n        <BeerButton\r\n            type=\"button\"\r\n            onClick={() => goTo(destination)}\r\n        >\r\n            {label}\r\n        </BeerButton>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","\r\nimport { FC } from \"react\"\r\nimport { useAppSelector } from \"../../redux/hooks\"\r\nimport { selectBeersByPage } from \"../../redux/beersSlice\"\r\nimport { getPage } from \"../../redux/fetchSlice\"\r\nimport useFetchBeers from \"../../fetch/useFetchBeers\"\r\nimport { BeersList, Header, Wrapper, Message } from \"./styles\"\r\nimport Pagination from \"../Pagination\"\r\nimport BeerElement from \"./BeerElement\"\r\nimport Search from \"../BeerSearch\"\r\nimport RandomBeerButton from \"../Button\"\r\n\r\nconst BeerList: FC = () => {\r\n    const {\r\n        isLoaded,\r\n        error\r\n    } = useFetchBeers()\r\n\r\n    const page = useAppSelector(getPage)\r\n\r\n    const displayList = () => {\r\n        if (error) {\r\n            return <Message>{error}</Message>\r\n        }\r\n        return isLoaded\r\n            ? beersList.length\r\n                ? beersList.map(beer => <BeerElement key={beer.id} {...beer} />)\r\n                : <Message>Not Found</Message>\r\n            : <Message>...Loading</Message>\r\n    }\r\n\r\n    const getRandomBeerAdress = () => {\r\n        const randomId = Math.floor(Math.random() * 50) + 1\r\n        return `/${randomId}`\r\n    }\r\n\r\n    const beersList = useAppSelector(selectBeersByPage(page - 1))\r\n\r\n    return (\r\n        <Wrapper>\r\n            <Header>\r\n                <Search />\r\n                <RandomBeerButton\r\n                    label=\"Random\"\r\n                    destination={getRandomBeerAdress()}\r\n                />\r\n            </Header>\r\n            <BeersList>\r\n                {displayList()}\r\n            </BeersList>\r\n            <Pagination />\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default BeerList\r\n","/* eslint-disable camelcase */\r\nimport { useEffect, useState } from \"react\"\r\n\r\nexport interface BeerDetailsProps {\r\n    name: string;\r\n    description: string;\r\n    first_brewed: string;\r\n    ibu: number;\r\n    abv: number;\r\n    image_url: string;\r\n}\r\n\r\ninterface UseFetchBeerDetailsProps {\r\n    isLoaded: boolean;\r\n    error: string | null;\r\n    beer: BeerDetailsProps | null;\r\n}\r\n\r\nconst useFetchBeerDetails = (id: number): UseFetchBeerDetailsProps => {\r\n    const [isLoaded, setIsLoaded] = useState(true)\r\n    const [error, setError] = useState<string | null>(null)\r\n    const [beer, setBeer] = useState<BeerDetailsProps | null>(null)\r\n\r\n    useEffect(() => {\r\n        setIsLoaded(false)\r\n        fetch(`https://api.punkapi.com/v2/beers/${id}`)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw Error(\"There was a problem to fetch data\")\r\n                }\r\n                return res.json()\r\n            })\r\n            .then(\r\n                (result: BeerDetailsProps[]) => {\r\n                    setIsLoaded(true)\r\n                    const { name, description, first_brewed, abv, ibu, image_url } = result[0]\r\n                    const beerDetails: BeerDetailsProps = {\r\n                        name,\r\n                        description,\r\n                        first_brewed,\r\n                        abv,\r\n                        ibu,\r\n                        image_url\r\n                    }\r\n                    setBeer(beerDetails)\r\n                }\r\n            ).catch(err => setError(err.message))\r\n    }, [id])\r\n\r\n    return {\r\n        isLoaded,\r\n        error,\r\n        beer\r\n    }\r\n}\r\n\r\nexport default useFetchBeerDetails\r\n","import styled from \"styled-components\"\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 80%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n`\r\n\r\nexport const Info = styled.div`\r\n    width: 60%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`\r\n\r\nexport const ImgWrapper = styled.div`\r\n    width: 40%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Name = styled.div`\r\n    font-size: 30px;\r\n    font-weight: bold;\r\n    margin-bottom: 10px;\r\n`\r\n\r\nexport const Description = styled.div`\r\n    font-size: 20px;\r\n    text-align: justify;\r\n    margin-bottom: 5px;\r\n`\r\n\r\nexport const Feature = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    font-size: 20px;\r\n    margin-bottom: 5px;\r\n`\r\nexport const Key = styled.div`\r\n    font-weight: bold;\r\n`\r\nexport const Value = styled.div`\r\n    padding-left: 10px;\r\n`\r\nexport const ButtonWrapper = styled.div`\r\n    margin: 30px;\r\n`\r\n","/* eslint-disable  @typescript-eslint/no-explicit-any */\r\nimport { FC } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport useFetchBeers, { BeerDetailsProps } from \"../../fetch/useFetchBeerDetails\"\r\nimport BackButton from \"../Button\"\r\nimport { Message } from \"../BeersList/styles\"\r\nimport {\r\n    Wrapper,\r\n    ImgWrapper,\r\n    Info,\r\n    Name,\r\n    Description,\r\n    Feature,\r\n    Key,\r\n    Value,\r\n    ButtonWrapper\r\n} from \"./styles\"\r\n\r\nconst BeerDetails: FC = () => {\r\n    const { id }: { id: string } = useParams()\r\n    const {\r\n        isLoaded,\r\n        error,\r\n        beer\r\n    } = useFetchBeers(Number(id))\r\n\r\n    const Features = (beer: BeerDetailsProps) => {\r\n        return Object.keys(beer).slice(2, 5).map((key) => (\r\n            <Feature key={key}>\r\n                <Key>\r\n                    {key}\r\n                </Key>\r\n                <Value>\r\n                    {(beer as any)[key]}\r\n                </Value>\r\n            </Feature>\r\n        ))\r\n    }\r\n\r\n    const Beer = beer && (\r\n        <Wrapper>\r\n            <ImgWrapper>\r\n                <img src={beer.image_url} height={\"400px\"} />\r\n            </ImgWrapper>\r\n            <Info>\r\n                <Name>{beer.name}</Name>\r\n                <Description>{beer.description}</Description>\r\n                {Features(beer)}\r\n            </Info>\r\n        </Wrapper>\r\n    )\r\n\r\n    const displayBeer = () => {\r\n        if (error) {\r\n            return <Message>{error}</Message>\r\n        }\r\n        return isLoaded\r\n            ? Beer\r\n            : <Message>...Loading</Message>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ButtonWrapper>\r\n                <BackButton\r\n                    label=\"Back to List\"\r\n                    destination=\"/\"\r\n                />\r\n            </ButtonWrapper>\r\n            {displayBeer()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BeerDetails\r\n","import { FC } from \"react\"\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport BeersList from \"../components/BeersList\"\r\nimport BeerDetails from \"../components/BeerDetails\"\r\n\r\nconst AppRouter: FC = () => (\r\n    <Router>\r\n        <Switch>\r\n            <Route path=\"/\" component={BeersList} exact={true} />\r\n            <Route path=\"/:id\" component={BeerDetails} exact={true} />\r\n        </Switch>\r\n    </Router>\r\n)\r\n\r\nexport default AppRouter\r\n","import { configureStore } from \"@reduxjs/toolkit\"\r\nimport beers from \"./beersSlice\"\r\nimport fetch from \"./fetchSlice\"\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        beers,\r\n        fetch\r\n    }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","/* eslint-disable no-use-before-define */\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { createGlobalStyle } from \"styled-components\"\nimport AppRouter from \"./router\"\nimport { store } from \"./redux/store\"\nimport { Provider } from \"react-redux\"\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    margin: 0;\n    font-family: -apple-system, Oxygen, Ubuntu;\n  }\n`\n\nReactDOM.render(\n    <React.StrictMode>\n        <GlobalStyle />\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n"],"sourceRoot":""}